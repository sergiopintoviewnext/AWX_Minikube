---

- name: Crear carpeta
  ansible.builtin.file:
    path: "{{ path }}"
    state: directory
    mode: '0755'


- name: Copiar template kustomization.yml
  ansible.builtin.template:
    src: kustomization.yml.j2
    dest: "{{ path }}/kustomization.yml"
    mode: '644'


- name: Ejecutar kustomization.yml
  block:
    - name: Ejecutar kustomization.yml
      ansible.builtin.shell:
        chdir: "{{ path }}"
        cmd: kubectl apply -k .
  rescue:
    - name: Copiar fichero kubernetes en home
      ansible.builtin.copy:
        src: "/home/{{ ansible_user }}/.kube/"
        dest: $HOME/.kube/
        mode: '0755'
        remote_src: true

    - name: Ejecutar kustomization.yml
      ansible.builtin.shell:
        chdir: "{{ path }}"
        cmd: kubectl apply -k .


- name: Añadir linea a fichero kustomization
  ansible.builtin.lineinfile:
    path: "{{ path }}/kustomization.yml"
    insertafter: "- github.com/ansible/awx-operator"
    regexp: "- github.com/ansible/awx-operator"
    line: "  - awx-demo.yml"


- name: Copiar awx-demo.yml
  ansible.builtin.copy:
    src: awx-demo.yml
    dest: "{{ path }}"
    mode: '0644'


- name: Ejecutar kustomization.yml
  ansible.builtin.shell:
    chdir: "{{ path }}"
    cmd: kubectl apply -k .


- name: Requirements python modulo kubernetes
  ansible.builtin.include_tasks: requirements.yml


- name: Esperar a creacion de pods
  kubernetes.core.k8s_info:
    kind: Deployment
    wait: yes
    name: "{{ item }}"
    namespace: awx
    wait_timeout: 1000
    wait_sleep: 30
  loop:
    - awx-operator-controller-manager
    - awx-demo-task
    - awx-demo-web


- name: Obtener url de minikube
  ansible.builtin.command:
    cmd: minikube service -n awx awx-demo-service --url
  register: url
  become: false


- name: Obtener password admin AWX
  kubernetes.core.k8s_info:
    kind: Secret
    name: awx-demo-admin-password
    namespace: awx
  register: password


- name: Añadir dominio a /etc/host
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ url.stdout }}   awx.local"


- name: Msg url, usuario, password
  ansible.builtin.debug:
    msg: "url:awx.local ({{ url.stdout }}); user:admin;  password:{{ password.resources[0].data.password | b64decode }}"

...